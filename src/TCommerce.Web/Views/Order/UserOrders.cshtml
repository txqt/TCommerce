@model UserOrderListModel
@{
    Layout = "_ColumnsTwo";
}
@section account_navigation
{
    @await Component.InvokeAsync("AccountNavigation", new { selectedTabId = (int)AccountNavigationEnum.Orders })
}
@if (Model.Orders.Count > 0)
{
    @foreach (var order in Model.Orders)
    {
        <div class="card mb-2" style="width: 100%;">
                <div class="d-flex justify-content-between">
                    <div class="card-left">
                        <div class="card-body">
                            <h6 class="card-subtitle mb-2 text-muted" style="text-transform: uppercase; margin: 0px 0px 10px;">
                                <strong>Order: @order.Id (#@order.OrderGuid)</strong>
                            </h6>

                            <p class="card-text" style="margin: 0px 0px 5px;">Order Status: <span class="order-status @order.OrderStatusEnum.ToString().ToLowerInvariant()">@order.OrderStatus</span></p>
                            <p class="card-text">Order Date: <span class="order-date">@order.CreatedOn.ToString()</span></p>
                            <p class="card-text">Order Total: <span class="order-total">@order.OrderTotal</span></p>
                        </div>
                    </div>
                    <div class="card-right mx-2 my-2">
                        <span><button type="button" class="btn btn-info" onclick="window.location.href = '@Url.RouteUrl("OrderDetails", new { orderId = order.Id })'">Details</button></span>
                    </div>
                </div>
         </div>

    }
}
else
{
    <div class="no-data">
        No Orders
    </div>
}