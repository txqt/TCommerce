@model OrderSearchModel

@{
    var orderTable = new DataTableViewModel()
            {
                TableTitle = "Danh sách đơn hàng",
                EditUrl = Url.Action("Edit", "Order"),
                DeleteUrl = Url.Action("DeleteDiscount", "Discount"),
                SearchButtonId = "search-orders",
                GetDataUrl = Url.Action("OrderList", "Order"),
                DefaultSort = new DefaultSort(2, "desc"),
                ServerSide = true,
                Filters = new List<Filter>()
                {
                    new Filter(nameof(Model.StartDate)),
                    new Filter(nameof(Model.EndDate)),
                    new Filter(nameof(Model.OrderStatusIds)),
                    new Filter(nameof(Model.PaymentStatusIds)),
                    new Filter(nameof(Model.PaymentMethodSystemName)),
                    new Filter(nameof(Model.ProductId)),
                    new Filter(nameof(Model.OrderNotes)),
                },
                Columns = new List<ColumnDefinition>()
                {
                    new ColumnDefinition(nameof(OrderModel.Id))
                    {
                        RenderType = RenderType.RenderCheckBox,
                        Orderable = false,
                        IsMasterCheckBox = true
                    },
                    new ColumnDefinition(nameof(OrderModel.Id))
                    {
                        Title = "Order #"
                    },
                    new ColumnDefinition(nameof(OrderModel.OrderStatus))
                    {
                        Title = DisplayNameExtensions.GetPropertyDisplayName<OrderModel>(m=>m.OrderStatus),
                        RenderType = RenderType.Custom,
                        FunctionName = "renderColumnOrderStatus"
                    },
                    new ColumnDefinition(nameof(OrderModel.CustomerEmail))
                    {
                        Title = DisplayNameExtensions.GetPropertyDisplayName<OrderModel>(m=>m.CustomerEmail)
                    },
                    new ColumnDefinition(nameof(OrderModel.Id))
                    {
                        RenderType = RenderType.RenderButtonEdit,
                        Title = "Edit",
                        Orderable = false
                    },
                    new ColumnDefinition(nameof(OrderModel.Id))
                    {
                        RenderType = RenderType.RenderButtonRemove,
                        Title = "Delete",
                        Orderable = false
                    },
                }
            };
}

<script>
    function renderColumnOrderStatus(data, type, row, meta) {
        var color;
        switch (row.OrderStatusId) {
        case 1:
            color = 'bg-warning text-dark';
            break;
        case 2:
            color = 'bg-info text-dark';
            break;
        case 3:
            color = 'bg-success';
            break;
        case 4:
            color = 'bg-danger';
            break;
        }
        return '<span class="badge ' + color + '">' + data + '</span >';
    }
</script>

@await Html.PartialAsync("_Table", orderTable)

