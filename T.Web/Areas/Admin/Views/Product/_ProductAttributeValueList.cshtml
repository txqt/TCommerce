@model ProductAttributeValueModel

<h3 class="text-info">Danh sách giá thị của thuộc tính này</h3>
<p>
    @{
        var createUrl = Url.Action("ProductAttributeValueCreate", "Product", new { productAttributeMappingId = Model.ProductAttributeMappingId });
    }
    <button class="btn btn-success" onclick="openPopup('@createUrl')" ">Tạo mới</button>
</p>

<div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
    <div class="row">
        <div class="col-sm-12" style="overflow-x: auto;">
            <table class="table table-bordered dataTable" id="dataTable-pav" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                <thead>
                    <tr role="row">
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PriceAdjustment)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.WeightAdjustment)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsPreSelected)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PictureThumbnailUrl)
                        </th>
                        <th>
                            Edit
                        </th>
                        <th>
                            Delete
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>

</div>

<script>
    $(document).ready(function () {
        LoadTable();
    });

    $('#dataTable-pav').on('click', '.deletePavBtn', function () {
        var pavId = $(this).data('pavid'); // Lấy pamId từ thuộc tính data của nút

        // Hiển thị hộp thoại "confirm"
        if (confirm("Bạn có chắc chắn muốn xóa?")) {
            $.ajax({
                url: "@Url.Action("DeleteProductAttributeValue", "Product")",
                type: "POST",
                data: { pavId: pavId },
                success: function (response) {
                    // Xử lý phản hồi từ API
                    if (response.success) {
                        LoadTable();
                    } else {
                        alert(response.message); // Hiển thị thông báo lỗi
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText); // Hiển thị lỗi trong console
                    alert("Đã xảy ra lỗi trong quá trình xóa liên kết thuộc tính với sản phẩm."); // Hiển thị thông báo lỗi
                }
            });
        }
    });
    
    function LoadTable(){
        $('#dataTable-pav').DataTable().destroy();
        $('#dataTable-pav').DataTable({
            ajax: {
                url: "@Url.Action("GetValueProductMapping","Product", new { productAttributeMapping = Model.ProductAttributeMappingId})",
                type: "GET",
                datatype: "json",
            },
            columns: [
                { data: "name" },
                { data: "priceAdjustment" },
                { data: "weightAdjustment" },
                {
                    "data": "isPreSelected",
                    "render": function (data, type, row) {
                        if (type === "display") {
                            return '<input type="checkbox" disabled="disabled" ' + (data ? 'checked="checked"' : '') + '/>';
                        }
                        return data;
                    }
                },
                { data: "pictureThumbnailUrl" },
                {
                    data: null,
                    render: function (data, type, row) {
                        if (type === "display") {
                            var editUrl = "@Url.Action("EditProductAttributeValue", "Product", new { id = "__id__" })".replace("__id__", row.id);
                            return '<button class="btn btn-info" onclick="openPopup(\'' + editUrl + '\')">Edit</button>';
                        }
                        return data;
                    }
                },
                {
                    data: null,
                    render: function (data, type, row) {
                        var pavId = row.id
                        if (type === "display") {
                            return '<button class="btn btn-danger d-flex justify-content-center align-items-center deletePavBtn" data-pavid="' + pavId + '">Delete</button>';
                        }
                        return data;
                    }
                }
            ]
        });
    }
</script>
