@model ProductAttributeValueModel

<p>
    @*<a href="@Url.Action("ProductAttributeMappingCreate", "Product", new { productId = Model.ProductId })">Create New</a>*@
</p>

<div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
    <div class="row">
        <div class="col-sm-12" style="overflow-x: auto;">
            <table class="table table-bordered dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                <thead>
                    <tr role="row">
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PriceAdjustment)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.WeightAdjustment)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsPreSelected)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PictureThumbnailUrl)
                        </th>
                        <th>
                            Edit
                        </th>
                        <th>
                            Delete
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>

</div>

<script>
    $(document).ready(function () {
        $('#dataTable').DataTable({
            "ajax": {
                "url": "@Url.Action("GetListProductMapping","Product", new { productId = 1})",
                "type": "GET",
                "datatype": "json",
            },
            "columns": [
                { "data": "productAttributeName" },
                { "data": "textPrompt" },
                {
                    "data": "isRequired",
                    "render": function (data, type, row) {
                        if (type === "display") {
                            return '<input type="checkbox" disabled="disabled" ' + (data ? 'checked="checked"' : '') + '/>';
                        }
                        return data;
                    }
                },
                { "data": "displayOrder" },
                {
                    "data": null,
                    "render": function (data, type, row) {
                        if (type === "display") {
                            var editUrl = "@Url.Action("EditProductAttributeValue", "Product", new { productAttributeMappingId = "__id__" })".replace("__id__", row.productAttributeId);
                            return '<a href="' + editUrl + '">Edit</a>';
                        }
                        return data;
                    }
                }
            ]
        });
    });
</script>
